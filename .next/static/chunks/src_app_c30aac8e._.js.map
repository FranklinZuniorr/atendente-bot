{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/fr/atendente-bot/src/app/configs/redux/slices/clientSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\nexport interface ClientReduxState {\n  telephone: string;\n  authCode: string;\n  createdAt: string;\n  updatedAt: string;\n  messageTokens: number;\n}\n\nconst initialState: ClientReduxState | null = null;\n\nexport const clientSlice = createSlice({\n  name: 'client',\n  initialState,\n  reducers: {\n    setClient: (state: ClientReduxState | null, action: PayloadAction<ClientReduxState | null>) => {\n      state = action.payload;\n    },\n  },\n});\n\nexport const { setClient } = clientSlice.actions;\n\nexport default clientSlice.reducer;"],"names":[],"mappings":";;;;;AAAA;;AAWA,MAAM,eAAwC;AAEvC,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACrC,MAAM;IACN;IACA,UAAU;QACR,WAAW,CAAC,OAAgC;YAC1C,QAAQ,OAAO,OAAO;QACxB;IACF;AACF;AAEO,MAAM,EAAE,SAAS,EAAE,GAAG,YAAY,OAAO;uCAEjC,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///home/fr/atendente-bot/src/app/configs/redux/slices/index.ts"],"sourcesContent":["import { combineSlices } from '@reduxjs/toolkit';\nimport { clientSlice } from './clientSlice';\n\nexport const rootReducer = combineSlices(clientSlice);"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,gBAAa,AAAD,EAAE,0JAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/fr/atendente-bot/src/app/configs/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { rootReducer } from './slices';\n\nexport const storeRedux = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof storeRedux.getState>\nexport type AppDispatch = typeof storeRedux.dispatch\n\nexport const useAppDispatch = useDispatch.withTypes<AppDispatch>();\nexport const useAppSelector = useSelector.withTypes<RootState>();"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,aAAa,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IACvC,SAAS,oJAAA,CAAA,cAAW;AACtB;AAKO,MAAM,iBAAiB,4JAAA,CAAA,cAAW,CAAC,SAAS;AAC5C,MAAM,iBAAiB,4JAAA,CAAA,cAAW,CAAC,SAAS","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///home/fr/atendente-bot/src/app/layout.tsx"],"sourcesContent":["'use client';\n\nimport './globals.css';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Provider } from 'react-redux';\nimport { storeRedux } from './configs/redux/store';\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const navigate = useRouter();\n\n  useEffect(() => {\n    navigate.push('/');\n  }, []);\n  return (\n    <html lang=\"en\">\n      <body>\n        <Provider store={storeRedux}>\n          {children}\n        </Provider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS,WAAW,EACjC,QAAQ,EAGR;;IACA,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,SAAS,IAAI,CAAC;QAChB;+BAAG,EAAE;IACL,qBACE,6LAAC;QAAK,MAAK;kBACT,cAAA,6LAAC;sBACC,cAAA,6LAAC,4JAAA,CAAA,WAAQ;gBAAC,OAAO,0IAAA,CAAA,aAAU;0BACxB;;;;;;;;;;;;;;;;AAKX;GAnBwB;;QAKL,qIAAA,CAAA,YAAS;;;KALJ","debugId":null}}]
}