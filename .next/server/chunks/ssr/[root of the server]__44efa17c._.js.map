{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/fr/atendente-bot/src/app/configs/axios/index.ts"],"sourcesContent":["import { AUTH_CODE_LOCAL_STORAGE_KEY, TELEPHONE_LOCAL_STORAGE_KEY } from '@/constants';\nimport axios, { AxiosError, AxiosResponse } from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const setAuthorizationMetadata = (authCode: string, telephone: string) => {\n  HttpClientApi.defaults.headers.common = { \n    authCode,\n    telephone\n  };\n};\n\nexport const HttpClientApi = axios.create();\n\nconst handleSuccess = async (response: AxiosResponse) => {\n  const { status } = response;\n  const isSuccess: boolean = status >= 200 && status <= 299;\n  \n  if (!isSuccess) {\n    toast.error(response.data.message || 'Erro na solicitação!');\n    return Promise.reject(false);\n  }\n  \n  if (isSuccess) {\n    if (response.config.method !== 'get') {\n      toast.success(response.data.message || 'Solicitação concluída!');\n    }\n  }\n  \n  return response;\n};\n  \nconst handleError = async (error: AxiosError) => {\n  if (error.response) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const message: string = (error.response.data as any).message as string;\n    if (error.config?.method !== 'get') {\n      toast.error(message || 'Erro na solicitação!');\n    }\n\n    if (error.status === 403) {\n      localStorage.removeItem(AUTH_CODE_LOCAL_STORAGE_KEY);\n      localStorage.removeItem(TELEPHONE_LOCAL_STORAGE_KEY);\n      window.location.reload();\n    }\n\n    return Promise.reject(error);\n  }\n  toast.error(`${error.code}: ${error.message}`);\n  return Promise.reject(error);\n};\n\nHttpClientApi.interceptors.response.use(handleSuccess, handleError);"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,MAAM,2BAA2B,CAAC,UAAkB;IACzD,cAAc,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG;QACtC;QACA;IACF;AACF;AAEO,MAAM,gBAAgB,qIAAA,CAAA,UAAK,CAAC,MAAM;AAEzC,MAAM,gBAAgB,OAAO;IAC3B,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,MAAM,YAAqB,UAAU,OAAO,UAAU;IAEtD,IAAI,CAAC,WAAW;QACd,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,OAAO,IAAI;QACrC,OAAO,QAAQ,MAAM,CAAC;IACxB;IAEA,IAAI,WAAW;QACb,IAAI,SAAS,MAAM,CAAC,MAAM,KAAK,OAAO;YACpC,uJAAA,CAAA,UAAK,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,OAAO,IAAI;QACzC;IACF;IAEA,OAAO;AACT;AAEA,MAAM,cAAc,OAAO;IACzB,IAAI,MAAM,QAAQ,EAAE;QAClB,8DAA8D;QAC9D,MAAM,UAAkB,AAAC,MAAM,QAAQ,CAAC,IAAI,CAAS,OAAO;QAC5D,IAAI,MAAM,MAAM,EAAE,WAAW,OAAO;YAClC,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC,WAAW;QACzB;QAEA,IAAI,MAAM,MAAM,KAAK,KAAK;YACxB,aAAa,UAAU,CAAC,gHAAA,CAAA,8BAA2B;YACnD,aAAa,UAAU,CAAC,gHAAA,CAAA,8BAA2B;YACnD,OAAO,QAAQ,CAAC,MAAM;QACxB;QAEA,OAAO,QAAQ,MAAM,CAAC;IACxB;IACA,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC,EAAE,EAAE,MAAM,OAAO,EAAE;IAC7C,OAAO,QAAQ,MAAM,CAAC;AACxB;AAEA,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///home/fr/atendente-bot/src/app/services/auth/index.ts"],"sourcesContent":["import { ReqResponse } from '@/app/interfaces';\nimport { AuthServiceCheckClientParams, AuthServiceCheckClientResponse, AuthServiceGetQrCodeResponse } from './interfaces';\nimport { HttpClientApi } from '@/app/configs/axios';\n\nexport class AuthService {\n  static async getQrCode (telephone: string): Promise<ReqResponse<AuthServiceGetQrCodeResponse>> {\n    const path: string = 'api/client/qr-code';\n\n    try {\n      const response = (await HttpClientApi.post(path, { telephone })).data;\n      return response;\n    } catch {\n      throw new Error(path);\n            \n    }\n  }\n\n  static async checkClient (params: AuthServiceCheckClientParams): Promise<ReqResponse<AuthServiceCheckClientResponse>> {\n    const path: string = 'api/client';\n\n    try {\n      const response = (await HttpClientApi.get(path, { params })).data;\n\n      return response;\n    } catch {\n      throw new Error(path);\n    }\n  }\n\n  static async finishConnection (telephone: string) {\n    const path: string = 'api/client';\n\n    try {\n      await HttpClientApi.delete(path, { data: { telephone } });\n    } catch {\n      throw new Error(path);\n    }\n  }\n}"],"names":[],"mappings":";;;AAEA;;AAEO,MAAM;IACX,aAAa,UAAW,SAAiB,EAAsD;QAC7F,MAAM,OAAe;QAErB,IAAI;YACF,MAAM,WAAW,CAAC,MAAM,uIAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,MAAM;gBAAE;YAAU,EAAE,EAAE,IAAI;YACrE,OAAO;QACT,EAAE,OAAM;YACN,MAAM,IAAI,MAAM;QAElB;IACF;IAEA,aAAa,YAAa,MAAoC,EAAwD;QACpH,MAAM,OAAe;QAErB,IAAI;YACF,MAAM,WAAW,CAAC,MAAM,uIAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,MAAM;gBAAE;YAAO,EAAE,EAAE,IAAI;YAEjE,OAAO;QACT,EAAE,OAAM;YACN,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,aAAa,iBAAkB,SAAiB,EAAE;QAChD,MAAM,OAAe;QAErB,IAAI;YACF,MAAM,uIAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,MAAM;gBAAE,MAAM;oBAAE;gBAAU;YAAE;QACzD,EAAE,OAAM;YACN,MAAM,IAAI,MAAM;QAClB;IACF;AACF","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/fr/atendente-bot/src/app/login/components/login-form/login-form.tsx"],"sourcesContent":["'use client';\n\nimport { AuthService } from '@/app/services/auth';\nimport { Button, Input } from 'antd';\nimport { formatTelephone } from 'frutils.js';\nimport { useState } from 'react';\n\nexport const LoginForm = () => {\n  const [inputTelephoneText, setInputTelephoneText] = useState<string>('');\n  const [qrCode, setQrCode] = useState<string>('');\n  const [pairingCode, setPairingCode] = useState<string>('');\n  const [isLoadingGetCodes, setIsLoadingGetCodes] = useState<boolean>(false);\n\n  const hasCodes = qrCode.length > 0 && pairingCode.length > 0;\n\n  const getQrCode = async () => {\n    try {\n      setIsLoadingGetCodes(true);\n      const response = await AuthService.getQrCode(inputTelephoneText);\n      setIsLoadingGetCodes(false);\n      setQrCode(response.data.code);\n      setPairingCode(response.data.pairingConde);\n\n    } catch {\n      setIsLoadingGetCodes(false);\n    }\n  };\n\n  return <div className='flex flex-col gap-5'>\n    {\n      !hasCodes ?\n        <>\n          <div className='flex flex-col'>\n            <span>Insira o seu número e comece a usar!</span>\n            <Input \n              value={inputTelephoneText} \n              onChange={event => setInputTelephoneText(formatTelephone(event.target.value))} \n              placeholder='(00) 00000-0000'\n            />\n          </div>\n          <Button \n            type=\"primary\" \n            color='primary'\n            loading={isLoadingGetCodes}\n            onClick={getQrCode}\n          >\n            Iniciar conexão\n          </Button>\n        </> : null\n    }\n  </div>;\n};"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AALA;;;;;;AAOO,MAAM,YAAY;IACvB,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACrE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEpE,MAAM,WAAW,OAAO,MAAM,GAAG,KAAK,YAAY,MAAM,GAAG;IAE3D,MAAM,YAAY;QAChB,IAAI;YACF,qBAAqB;YACrB,MAAM,WAAW,MAAM,uIAAA,CAAA,cAAW,CAAC,SAAS,CAAC;YAC7C,qBAAqB;YACrB,UAAU,SAAS,IAAI,CAAC,IAAI;YAC5B,eAAe,SAAS,IAAI,CAAC,YAAY;QAE3C,EAAE,OAAM;YACN,qBAAqB;QACvB;IACF;IAEA,qBAAO,8OAAC;QAAI,WAAU;kBAElB,CAAC,yBACC;;8BACE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;sCAAK;;;;;;sCACN,8OAAC,gLAAA,CAAA,QAAK;4BACJ,OAAO;4BACP,UAAU,CAAA,QAAS,sBAAsB,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,MAAM,CAAC,KAAK;4BAC3E,aAAY;;;;;;;;;;;;8BAGhB,8OAAC,kMAAA,CAAA,SAAM;oBACL,MAAK;oBACL,OAAM;oBACN,SAAS;oBACT,SAAS;8BACV;;;;;;;2BAGG;;;;;;AAGd","debugId":null}}]
}